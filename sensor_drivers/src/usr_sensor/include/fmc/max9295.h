/****************************************************************************
 *
 * The MIT License (MIT)
 *
 * Copyright (c) 2025 Advanced Micro Devices, Inc. All right reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 ****************************************************************************/
#ifndef __XYLON_MAX_9295_H__
#define __XYLON_MAX_9295_H__

#include <isi/isi_fmc.h>

#define MAX929X_TABLE_END	(0xffff)
#define MAX929X_TABLE_WAIT	(0xfffe)
#define MAX929X_TABLE_WAIT_MS	(210)

RegI2CT Ser0_init[] = {
};

RegI2CT Ser1_init[] = {
};

RegI2CT Ser2_init[] = {
#ifdef AB_MODE
	{0x0053, 0x10},
	{0x0057, 0x11},
	{0x005B, 0x12},
	{0x005F, 0x13},
	{0x0101, 0x4B},
	{0x0109, 0x0B},
	{0x0111, 0x4B},
	{0x0119, 0x4B},
	{0x0330, 0x00},
	{0x0331, 0x33},
	{0x0332, 0xe0},
	{0x0333, 0x04},
	{0x0119, 0x4C},
	{0x0314, 0x00},
	{0x0316, 0x00},
	{0x0318, 0x00},
	{0x031A, 0x00},
	{0x02be, 0x90},
	{0x0308, 0x7F},
	{0x0311, 0x20},
	{0x0002, 0x23},
	{0x02be, 0x90},
	{MAX929X_TABLE_WAIT, MAX929X_TABLE_WAIT_MS},
	{MAX929X_TABLE_END, 0}
#else
	{0x0053, 0x10},
	{0x0057, 0x11},
	{0x005B, 0x12},
	{0x005F, 0x13},
	{0x0101, 0x4C},
	{0x0109, 0x0C},
	{0x0111, 0x4C},
	{0x0119, 0x4C},
	{0x0330, 0x00},
	{0x0331, 0x33},
	{0x0332, 0xe0},
	{0x0333, 0x04},
	{0x0119, 0x4C},
	{0x0314, 0x00},
	{0x0316, 0x00},
	{0x0318, 0x6C},
	{0x031A, 0x00},
	{0x02be, 0x90},
	{0x0308, 0x7F},
	{0x0311, 0x25},
	{0x0002, 0xF3},
	{0x02be, 0x90},
	{MAX929X_TABLE_WAIT, MAX929X_TABLE_WAIT_MS},
	{MAX929X_TABLE_END, 0}
#endif
};

RegI2CT Ser3_init[] = {
	{0x0053, 0x10},
	{0x0057, 0x12},
	{0x005B, 0x11},
	{0x005F, 0x13},
	{0x0101, 0x4C},
	{0x0109, 0x0C},
	{0x0111, 0x4C},
	{0x0119, 0x4C},
	{0x0330, 0x00},
	{0x0331, 0x33},
	{0x0332, 0xe0},
	{0x0333, 0x04},
	{0x0119, 0x4C},
	{0x0314, 0x00},
	{0x0316, 0x00},
	{0x0318, 0x00},
	{0x031A, 0x00},
	{0x02be, 0x90},
	{0x0308, 0x7F},
	{0x0311, 0x20},
	{0x0002, 0x23},
	{0x02be, 0x90},
	{MAX929X_TABLE_WAIT, MAX929X_TABLE_WAIT_MS},
	{MAX929X_TABLE_END, 0}
};

RegI2CT Ser4_init[] = {
	{0x0053, 0x10},
	{0x0057, 0x11},
	{0x005B, 0x12},
	{0x005F, 0x13},
	{0x0101, 0x4C},
	{0x0109, 0x0C},
	{0x0111, 0x4C},
	{0x0119, 0x4C},
	{0x0330, 0x00},
	{0x0331, 0x33},
	{0x0332, 0xe0},
	{0x0333, 0x04},
	{0x0119, 0x4C},
	{0x0314, 0x00},
	{0x0316, 0x00},
	{0x0318, 0x00},
	{0x031A, 0x00},
	{0x02be, 0x90},
	{0x0308, 0x7F},
	{0x0311, 0x20},
	{0x0002, 0x23},
	{0x02be, 0x90},
	{MAX929X_TABLE_WAIT, MAX929X_TABLE_WAIT_MS},
	{MAX929X_TABLE_END, 0}
};

RegI2CT Ser5_init[] = {
	{0x0053, 0x10},
	{0x0057, 0x12},
	{0x005B, 0x11},
	{0x005F, 0x13},
	{0x0101, 0x4C},
	{0x0109, 0x0C},
	{0x0111, 0x4C},
	{0x0119, 0x4C},
	{0x0330, 0x00},
	{0x0331, 0x33},
	{0x0332, 0xe0},
	{0x0333, 0x04},
	{0x0119, 0x4C},
	{0x0314, 0x00},
	{0x0316, 0x00},
	{0x0318, 0x00},
	{0x031A, 0x00},
	{0x02be, 0x90},
	{0x0308, 0x7F},
	{0x0311, 0x20},
	{0x0002, 0x23},
	{0x02be, 0x90},
	{MAX929X_TABLE_WAIT, MAX929X_TABLE_WAIT_MS},
	{MAX929X_TABLE_END, 0}
};

RegI2CT Ser6_init[] = {
	{0x0053, 0x10},
	{0x0057, 0x11},
	{0x005B, 0x12},
	{0x005F, 0x13},
	{0x0101, 0x4C},
	{0x0109, 0x0C},
	{0x0111, 0x4C},
	{0x0119, 0x4C},
	{0x0330, 0x00},
	{0x0331, 0x33},
	{0x0332, 0xe0},
	{0x0333, 0x04},
	{0x0119, 0x4C},
	{0x0314, 0x00},
	{0x0316, 0x00},
	{0x0318, 0x6C},
	{0x031A, 0x00},
	{0x02be, 0x90},
	{0x0308, 0x7F},
	{0x0311, 0x25},
	{0x0002, 0xF3},
	{0x02be, 0x90},
	{MAX929X_TABLE_WAIT, MAX929X_TABLE_WAIT_MS},
	{MAX929X_TABLE_END, 0}
};

RegI2CT Ser7_init[] = {
	{0x0053, 0x10},
	{0x0057, 0x12},
	{0x005B, 0x11},
	{0x005F, 0x13},
	{0x0101, 0x4C},
	{0x0109, 0x0C},
	{0x0111, 0x4C},
	{0x0119, 0x4C},
	{0x0330, 0x00},
	{0x0331, 0x33},
	{0x0332, 0xe0},
	{0x0333, 0x04},
	{0x0119, 0x4C},
	{0x0314, 0x00},
	{0x0316, 0x00},
	{0x0318, 0x00},
	{0x031A, 0x00},
	{0x02be, 0x90},
	{0x0308, 0x7F},
	{0x0311, 0x20},
	{0x0002, 0x23},
	{0x02be, 0x90},
	{MAX929X_TABLE_WAIT, MAX929X_TABLE_WAIT_MS},
	{MAX929X_TABLE_END, 0}
};

RegI2CT Ser8_init[] = {
};

RegI2CT Ser9_init[] = {
	{0x0053, 0x10},
	{0x0057, 0x12},
	{0x005B, 0x11},
	{0x005F, 0x13},
	{0x0101, 0x4C},
	{0x0109, 0x0C},
	{0x0111, 0x4C},
	{0x0119, 0x4C},
	{0x0330, 0x00},
	{0x0331, 0x33},
	{0x0332, 0xe0},
	{0x0333, 0x04},
	{0x0119, 0x4C},
	{0x0314, 0x00},
	{0x0316, 0x00},
	{0x0318, 0x00},
	{0x031A, 0x00},
	{0x02be, 0x90},
	{0x0308, 0x7F},
	{0x0311, 0x20},
	{0x0002, 0x23},
	{0x02be, 0x90},
	{MAX929X_TABLE_WAIT, MAX929X_TABLE_WAIT_MS},
	{MAX929X_TABLE_END, 0}
};

RegI2CT Ser10_init[] = {
	{0x0053, 0x10},
	{0x0057, 0x11},
	{0x005B, 0x12},
	{0x005F, 0x13},
	{0x0101, 0x4B},
	{0x0109, 0x0B},
	{0x0111, 0x4B},
	{0x0119, 0x4B},
	{0x0330, 0x00},
	{0x0331, 0x33},
	{0x0332, 0xe0},
	{0x0333, 0x04},
	{0x0119, 0x4C},
	{0x0314, 0x00},
	{0x0316, 0x00},
	{0x0318, 0x00},
	{0x031A, 0x00},
	{0x02be, 0x90},
	{0x0308, 0x7F},
	{0x0311, 0x20},
	{0x0002, 0x23},
	{0x02be, 0x90},
	{MAX929X_TABLE_WAIT, MAX929X_TABLE_WAIT_MS},
	{MAX929X_TABLE_END, 0}
};

RegI2CT Ser11_init[] = {
};

RegI2CT Ser12_init[] = {
	{0x0053, 0x10},
	{0x0057, 0x11},
	{0x005B, 0x12},
	{0x005F, 0x13},
	{0x0101, 0x4B},
	{0x0109, 0x0B},
	{0x0111, 0x4B},
	{0x0119, 0x4B},
	{0x0330, 0x00},
	{0x0331, 0x33},
	{0x0332, 0xe0},
	{0x0333, 0x04},
	{0x0119, 0x4C},
	{0x0314, 0x00},
	{0x0316, 0x00},
	{0x0318, 0x00},
	{0x031A, 0x00},
	{0x02be, 0x90},
	{0x0308, 0x7F},
	{0x0311, 0x20},
	{0x0002, 0x23},
	{0x02be, 0x90},
	{MAX929X_TABLE_WAIT, MAX929X_TABLE_WAIT_MS},
	{MAX929X_TABLE_END, 0}
};

int max9295_init(struct serializer_driver *ser_inst);
int max9295_deinit(struct serializer_driver *ser_inst);
int max9295_set_alias(struct serializer_driver *ser_inst, int link_number, int i2c_addr,
			int alias_addr);
int max9295_enable_link(struct serializer_driver *ser_inst, int link_mode);
int max9295_disable_link(struct serializer_driver *ser_inst, int link_mode);
int max9295_reset_links(struct serializer_driver *ser_inst);
int max9295_phy_lane_enable(struct serializer_driver *ser_inst, int phy_count);
int max9295_set_virt_id_map(struct serializer_driver *ser_inst, struct map_struct *map,
			int map_count);
int max9295_set_sensor_addr_map(struct serializer_driver *ser_inst, struct map_struct *map,
			int map_count);
int max9295_set_broadcast_addr(struct serializer_driver *ser_inst, int broadcast_addr);
int max9295_send_broadcast(struct serializer_driver *ser_inst, char *data, int size);
int max9295_i2c_write(struct serializer_driver *ser_inst, char *data, int size);
int max9295_i2c_read(struct serializer_driver *ser_inst, char *data, int size);

#endif